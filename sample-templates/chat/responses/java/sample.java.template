```caleuche-template-java
import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import com.openai.models.ResponseModel;
import com.openai.models.responses.Response;
import com.openai.models.responses.ResponseCreateParams;
import com.openai.models.responses.ResponseInput;

<% if (useTokenCredentials) { %>import com.azure.identity.AuthenticationUtil;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.openai.credential.BearerTokenCredential; <% 
} else { %>import com.openai.azure.credential.AzureApiKeyCredential; 
<% } %>

public class Sample {
    public static void main(String[] args) {

    <%= java.valueOrEnvironment(useEnvVars, "endpoint", "AZURE_OPENAI_ENDPOINT", endpoint)%>
    <%if (!useTokenCredentials) { %>
    <%= java.valueOrEnvironment(useEnvVars, "apiKey", "AZURE_OPENAI_API_KEY", apiKey)%>
    <%}%>
    <%= java.valueOrEnvironment(useEnvVars, "deploymentName", "AZURE_OPENAI_DEPLOYMENT", deploymentName)%>

        <% if (!useTokenCredentials) { %>
        OpenAIClient client = OpenAIOkHttpClient.builder()
                .baseUrl(endpoint)
                .credential(AzureApiKeyCredential.create("{your-api-key}"))
                .build();
        <% 
        } else { %>
         OpenAIClient client = OpenAIOkHttpClient.builder()
                .baseUrl(endpoint)
                // Set the Azure Entra ID
                .credential(BearerTokenCredential.create(AuthenticationUtil.getBearerTokenSupplier(
                        new DefaultAzureCredentialBuilder().build(), "https://cognitiveservices.azure.com/.default")))
                .build();
        <%} %>

        ResponseCreateParams.Builder paramsBuilder = ResponseCreateParams.builder()
                .model(ResponseModel.of(deploymentName))
                .addInput(ResponseInput.ofUser("What's the capital of France?"));

        <% if (extraParams) { %>
        <% if (extraParams.Temperature) { %>
        paramsBuilder.temperature(<%= extraParams.Temperature %>);
        <% } %>
        <% } %>

        ResponseCreateParams createParams = paramsBuilder.build();

        Response response = client.responses().create(createParams);
        System.out.printf("answer: %s%n", response.getOutputText());
    }
}
```
